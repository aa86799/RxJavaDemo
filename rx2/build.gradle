apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.stone.rx2"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        jackOptions {//java8, 在新的studio2.4 preview中已自动支持  无需要配置其它了
//            enabled true
//        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation'junit:junit:4.12'
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'io.reactivex.rxjava2:rxjava:+'
    implementation 'io.reactivex.rxjava2:rxandroid:+'
    /*
        reactive streams(反应流)主动提供一个异步非阻塞背压流处理的标准
        在依赖了上面两个库后，发现 反应流这个不用再 单独引入
         */
    //    compile 'org.reactivestreams:reactive-streams:1.0.0.final'
    /*
        retrofit官方还有没有出 与 rxjava2 相适配的 库
        这是一个大神写的
         */
    //    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
}
